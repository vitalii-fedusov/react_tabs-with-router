{"version":3,"sources":["TabsSection.tsx","App.tsx","Root.tsx","index.tsx"],"names":["tabs","id","title","content","TabsSection","selectedTabId","useParams","tabId","currentTab","find","tab","className","map","classNames","to","getLinkClass","isActive","App","isTabsPage","useLocation","pathname","includes","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"kPAGMA,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAc,WACzB,IACMC,EADYC,cAAVC,OACuB,KACzBC,EAAaR,EAAKS,MAAK,SAAAC,GAAG,OAAIA,EAAIT,KAAOI,CAAf,IAEhC,OACE,qCACE,qBAAKM,UAAU,gBAAf,SACE,6BACGX,EAAKY,KAAI,SAAAF,GAAG,OACX,oBAEE,UAAQ,MACRC,UAAWE,IAAW,CACpB,YAAaR,IAAkBK,EAAIT,KAJvC,SAOE,cAAC,IAAD,CAAMa,GAAE,eAAUJ,EAAIT,IAAtB,SAA6BS,EAAIR,SAN5BQ,EAAIT,GAFA,QAefO,EACE,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,gBACGH,QADH,IACGA,OADH,EACGA,EAAYL,UAGf,qBAAKQ,UAAU,QAAQ,UAAQ,aAA/B,mCAOT,ECtCKI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnBH,IAAW,cAAe,CACxB,YAAaG,GAFI,EAMRC,EAAM,WACjB,IACMC,EADWC,cACWC,SAASC,SAAS,QAE9C,OACE,qCACE,qBACEV,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEG,GAAG,IACHH,UAAWI,EAFb,kBAMA,cAAC,IAAD,CACED,GAAG,QACHH,UAAWI,EAFb,yBAUN,qBAAKJ,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,IAECO,GAAe,cAAC,EAAD,WAKzB,EC5CYI,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUV,GAAG,QACzC,cAAC,IAAD,CAAOW,OAAK,EAACD,QAAS,oBAAIb,UAAU,QAAd,yBAEtB,cAAC,IAAD,CACEY,KAAK,OACLC,QAAS,oBAAIb,UAAU,QAAd,uBAFX,SAIE,cAAC,IAAD,CAAOY,KAAK,UAAUC,QAAS,cAAC,EAAD,QAGjC,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAIb,UAAU,QAAd,oCAhBC,ECHpBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.b10fbdee.chunk.js","sourcesContent":["import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsSection = () => {\n  const { tabId } = useParams();\n  const selectedTabId = tabId || null;\n  const currentTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': selectedTabId === tab.id,\n              })}\n            >\n              <Link to={`tabs/${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {\n        currentTab ? (\n          <div className=\"block\" data-cy=\"TabContent\">\n            {currentTab?.content}\n          </div>\n        ) : (\n          <div className=\"block\" data-cy=\"TabContent\">\n            Please select a tab\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Outlet, NavLink, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { TabsSection } from './TabsSection';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', {\n    'is-active': isActive,\n  })\n);\n\nexport const App = () => {\n  const location = useLocation();\n  const isTabsPage = location.pathname.includes('tabs');\n\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getLinkClass}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/tabs\"\n              className={getLinkClass}\n            >\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n\n          {isTabsPage && (<TabsSection />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { TabsSection } from './TabsSection';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n        <Route index element={<h1 className=\"title\">Home page</h1>} />\n\n        <Route\n          path=\"tabs\"\n          element={<h1 className=\"title\">Tabs page</h1>}\n        >\n          <Route path=\":tabId?\" element={<TabsSection />} />\n        </Route>\n\n        <Route\n          path=\"*\"\n          element={<h1 className=\"title\">Page not found</h1>}\n        />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}